apply plugin: 'java'
apply plugin: 'application'
apply plugin: 'war'
apply plugin: 'eclipse'
apply plugin: 'eclipse-wtp'

apply plugin: 'org.akhikhl.gretty'

repositories {
	mavenCentral()
	jcenter() // for gretty plugin
}

mainClassName = ''

// Use Java 7
sourceCompatibility = 1.7
targetCompatibility = 1.7

jar {
    baseName = 'mastermind'
    version =  '0.2.0'
}

war.archiveName "mastermind.war"

dependencies {
	ext.springSecurityVersion = '3.2.3.RELEASE'
	ext.springVersion = '3.2.8.RELEASE'

	providedCompile 'javax.servlet:servlet-api:2.5'
	compile "org.springframework:spring-webmvc:${springVersion}"
	compile "org.springframework.security:spring-security-web:${springSecurityVersion}"
	compile "org.springframework.security:spring-security-config:${springSecurityVersion}"
	compile 'org.apache.commons:commons-lang3:3.5'
	compile 'commons-codec:commons-codec:1.9'
	compile 'joda-time:joda-time:2.9.9'

	/* Needed to use JSTL core (c:tags, <%@ taglib uri="http://java.sun.com/jsp/jstl/core"..) with Tomcat 7.0.x: adds the standard-1.1.2.jar to the WAR file*/
	compile 'taglibs:standard:1.1.2'

	runtime 'javax.servlet:jstl:1.1.2'

	/* for JUnit tests */
	testCompile 'junit:junit:4.12'
	testCompile "org.hamcrest:hamcrest-all:1.3"
}

//Gretty Embedded Jetty
buildscript {
	repositories {
		jcenter()
	}

	dependencies {
		classpath 'org.akhikhl.gretty:gretty:1.4.0'  // latest version on 2017-01
	}
}

// Using gretty
//   Jetty8 does not support non-jar WebApplicationInitializer scanning, even it's a servlet 3.0+ container.
//   This will cause "No Spring WebApplicationInitializer types detected on classpath"
gretty {
	port = 8080
	contextPath = 'mastermind'
	servletContainer = 'jetty9' //tomcat7 or tomcat8
}

// [GC] This lines let Spring Boot to run with tomcat 7.0 - otherwise you get an unsupported version (java7)
ext['tomcat.version'] = '7.0.59'

dependencies {
	compile group:'org.apache.tomcat', name:'tomcat-juli', version:property('tomcat.version')
}
